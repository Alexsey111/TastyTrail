#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Ä–µ—Ü–µ–ø—Ç–æ–≤
"""

from api_client import RecipeAPI

def test_themedb_api():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ TheMealDB API"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ TheMealDB API...")
    
    api = RecipeAPI()
    
    # –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ —Ä–µ—Ü–µ–ø—Ç–æ–≤
    test_queries = ["pasta", "chicken", "beef", "fish", "salad", "cake", "bread", "soup"]
    
    for query in test_queries:
        print(f"\n1. –ü–æ–∏—Å–∫ —Ä–µ—Ü–µ–ø—Ç–æ–≤ '{query}':")
        recipes = api.search_recipes_themedb(query)
        if recipes:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(recipes)} —Ä–µ—Ü–µ–ø—Ç–æ–≤")
            for i, recipe in enumerate(recipes[:3], 1):
                print(f"   {i}. {recipe['name']}")
        else:
            print("‚ùå –†–µ—Ü–µ–ø—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    
    # –¢–µ—Å—Ç —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ä–µ—Ü–µ–ø—Ç–∞
    print("\n2. –°–ª—É—á–∞–π–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç:")
    random_recipe = api.get_random_recipe()
    if random_recipe:
        print(f"‚úÖ –°–ª—É—á–∞–π–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç: {random_recipe['name']}")
        print(f"   –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤: {len(random_recipe['ingredients'])}")
        if random_recipe.get('video'):
            print(f"   –í–∏–¥–µ–æ—Ä–µ—Ü–µ–ø—Ç: {random_recipe['video']}")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç")
    
    # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ—Ü–µ–ø—Ç–∞ –ø–æ ID
    print(f"\n3. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ –ø–æ ID {random_recipe['id']}:")
    recipe_by_id = api.get_recipe_by_id(random_recipe['id'])
    if recipe_by_id:
        print(f"‚úÖ –†–µ—Ü–µ–ø—Ç –Ω–∞–π–¥–µ–Ω: {recipe_by_id['name']}")
    else:
        print("‚ùå –†–µ—Ü–µ–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")

def test_spoonacular_api():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Spoonacular API"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Spoonacular API...")
    
    api = RecipeAPI()
    
    if not api.spoonacular_api_key:
        print("‚ö†Ô∏è  Spoonacular API –∫–ª—é—á –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return
    
    # –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ —Ä–µ—Ü–µ–ø—Ç–æ–≤
    print("\n1. –ü–æ–∏—Å–∫ —Ä–µ—Ü–µ–ø—Ç–æ–≤ 'chicken':")
    recipes = api.search_recipes_spoonacular("chicken")
    if recipes:
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(recipes)} —Ä–µ—Ü–µ–ø—Ç–æ–≤")
        for i, recipe in enumerate(recipes[:3], 1):
            print(f"   {i}. {recipe['name']}")
    else:
        print("‚ùå –†–µ—Ü–µ–ø—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

def test_combined_search():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞...")
    
    api = RecipeAPI()
    
    print("\n1. –ü–æ–∏—Å–∫ 'pizza':")
    recipes = api.search_recipes("pizza")
    if recipes:
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(recipes)} —Ä–µ—Ü–µ–ø—Ç–æ–≤")
        sources = {}
        for recipe in recipes:
            source = recipe.get('source', 'Unknown')
            sources[source] = sources.get(source, 0) + 1
        
        for source, count in sources.items():
            print(f"   {source}: {count} —Ä–µ—Ü–µ–ø—Ç–æ–≤")
    else:
        print("‚ùå –†–µ—Ü–µ–ø—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Ä–µ—Ü–µ–ø—Ç–æ–≤\n")
    
    try:
        test_themedb_api()
        test_spoonacular_api()
        test_combined_search()
        
        print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
